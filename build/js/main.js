"use strict";

//fade-in when visible
document.addEventListener("DOMContentLoaded", function () {
  var elements = document.querySelectorAll(".fade-in, .slideInLeft, .slideInRight, .fadeInFromTop");
  function checkVisibility() {
    elements.forEach(function (el) {
      var rect = el.getBoundingClientRect();
      if (rect.top < window.innerHeight * 0.9) {
        el.classList.add("visible");
      }
    });
  }
  window.addEventListener("scroll", checkVisibility);
  checkVisibility();
});

//open form block
document.addEventListener("DOMContentLoaded", function () {
  var btn = document.querySelector(".header__content-btn");
  var form = document.querySelector(".firstForm");
  btn.addEventListener("click", function () {
    if (form.style.display === "none" || form.style.display === "") {
      form.style.display = "block";
      btn.textContent = "Згорнути";
    } else {
      form.style.display = "none";
      btn.textContent = "Доєднатись";
    }
  });
});

//slider

document.addEventListener("DOMContentLoaded", function () {
  var sliderWrapper = document.querySelector(".slider__wrapper");
  var slides = document.querySelectorAll(".slider__slide");
  var prevBtn = document.querySelector(".slider__btn-prev");
  var nextBtn = document.querySelector(".slider__btn-next");
  var dotsContainer = document.querySelector(".slider__dots");
  var currentIndex = 0;
  var interval;
  function updateSlider() {
    slides.forEach(function (slide, index) {
      slide.style.display = index === currentIndex ? "flex" : "none";
    });
    document.querySelectorAll(".slider__dot").forEach(function (dot, index) {
      dot.classList.toggle("active", index === currentIndex);
    });
  }
  function nextSlide() {
    currentIndex = (currentIndex + 1) % slides.length;
    updateSlider();
  }
  function prevSlide() {
    currentIndex = (currentIndex - 1 + slides.length) % slides.length;
    updateSlider();
  }
  function startAutoSlide() {
    interval = setInterval(nextSlide, 3000);
  }
  function stopAutoSlide() {
    clearInterval(interval);
  }
  slides.forEach(function (_, index) {
    var dot = document.createElement("span");
    dot.classList.add("slider__dot");
    dot.addEventListener("click", function () {
      currentIndex = index;
      updateSlider();
    });
    dotsContainer.appendChild(dot);
  });
  prevBtn.addEventListener("click", prevSlide);
  nextBtn.addEventListener("click", nextSlide);
  updateSlider();
  startAutoSlide();
});

//form

document.addEventListener("DOMContentLoaded", function () {
  var forms = document.querySelectorAll('form'); // Все формы на странице

  forms.forEach(function (form) {
    var phoneInput = form.querySelector('.form__input-phone');
    var dateInput = form.querySelector('.form__input-date');
    var regionInput = form.querySelector('.form__input-region');
    var checkboxInput = form.querySelector('.form__input-checkbox');
    var radioInputs = form.querySelectorAll('input[name="yes-no"]'); // Для проверки военнослужащего
    var submitButton = form.querySelector('.form__submit');
    var allInputs = form.querySelectorAll('.form__input');
    var telegramInput = form.querySelector('.form__input-telegram'); // Нік в телеграмі
    var formWarning = form.querySelector('.form__warning'); // Контейнер для предупреждений

    // telephone
    phoneInput.addEventListener('focus', function () {
      if (phoneInput.value.trim() === '') {
        phoneInput.value = '+38'; // Автозаполнение при фокусе
      }
    });
    phoneInput.addEventListener('input', function () {
      var value = this.value.replace(/\D/g, '');
      if (value.length > 1) {
        value = '+38 ' + value.slice(2, 5) + ' ' + value.slice(5, 8) + ' ' + value.slice(8, 10) + ' ' + value.slice(10, 12);
      } else {
        value = '+38';
      }
      this.value = value;
    });

    //input
    form.addEventListener('input', function (event) {
      var targetInput = event.target;
      if (targetInput.classList.contains('warning')) {
        validateSingleInput(targetInput);
      }
      var isAnyInputFilled = Array.from(allInputs).some(function (input) {
        return input.value.trim() !== "" || input.checked;
      });
      if (isAnyInputFilled) {
        submitButton.classList.add('active');
      } else {
        submitButton.classList.remove('active');
      }
    });

    // check 1 input
    function validateSingleInput(input) {
      if (input.type === "date" && input.value === "2000-01-01") {
        input.classList.add('warning');
      } else if (input.value.trim() === "" || input.classList.contains('form__input-phone') && !/^\+38\s*\d{3}\s*\d{3}\s*\d{2}\s*\d{2}$/.test(input.value)) {
        input.classList.add('warning');
      } else if (input.classList.contains('form__input-region') && input.value === "") {
        input.classList.add('warning');
      } else if (input.classList.contains('form__input-checkbox') && !input.checked) {
        input.classList.add('warning');
      } else if (input.classList.contains('form__input-radio')) {
        var isRadioChecked = Array.from(radioInputs).some(function (radio) {
          return radio.checked;
        });
        if (!isRadioChecked) {
          radioInputs.forEach(function (radio) {
            return radio.classList.add('warning');
          });
        } else {
          radioInputs.forEach(function (radio) {
            return radio.classList.remove('warning');
          });
        }
      } else {
        input.classList.remove('warning');
      }
    }

    // validation
    function validateInputs(form) {
      var isValid = true;
      var hasWarning = false;
      allInputs.forEach(function (input) {
        if (input === telegramInput) {
          return;
        }
        if (input.type === "date" && input.value === "2000-01-01") {
          input.classList.add('warning');
          hasWarning = true;
          isValid = false;
        } else if (input.value.trim() === "" || input.classList.contains('form__input-phone') && !/^\+38\s*\d{3}\s*\d{3}\s*\d{2}\s*\d{2}$/.test(input.value)) {
          input.classList.add('warning');
          hasWarning = true;
          isValid = false;
        } else if (input.classList.contains('form__input-region') && input.value === "") {
          input.classList.add('warning');
          hasWarning = true;
          isValid = false;
        } else if (input.classList.contains('form__input-checkbox') && !input.checked) {
          input.classList.add('warning');
          hasWarning = true;
          isValid = false;
        } else if (input.classList.contains('form__input-radio')) {
          var isRadioChecked = Array.from(radioInputs).some(function (radio) {
            return radio.checked;
          });
          if (!isRadioChecked) {
            radioInputs.forEach(function (radio) {
              return radio.classList.add('warning');
            });
            hasWarning = true;
            isValid = false;
          } else {
            radioInputs.forEach(function (radio) {
              return radio.classList.remove('warning');
            });
          }
        } else {
          input.classList.remove('warning');
        }
      });
      if (hasWarning) {
        formWarning.classList.add('visible');
      } else {
        formWarning.classList.remove('visible');
      }
      if (isValid) {
        submitButton.classList.remove('warning');
      } else {
        submitButton.classList.add('warning');
      }
    }

    //submit
    form.addEventListener('submit', function (event) {
      event.preventDefault();
      var isValid = true;
      validateInputs(form);
      if (form.querySelector('.warning')) {
        isValid = false;
      }
      if (isValid) {
        var successMessage = form.querySelector('.form__success');
        if (successMessage) {
          successMessage.classList.add('visible');
          setTimeout(function () {
            successMessage.classList.remove('visible');
            form.reset();
          }, 5000);
          successMessage.addEventListener('click', function () {
            successMessage.classList.remove('visible');
            form.reset();
          });
        }
      }
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY2hlY2tWaXNpYmlsaXR5IiwiZm9yRWFjaCIsImVsIiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsIndpbmRvdyIsImlubmVySGVpZ2h0IiwiY2xhc3NMaXN0IiwiYWRkIiwiYnRuIiwicXVlcnlTZWxlY3RvciIsImZvcm0iLCJzdHlsZSIsImRpc3BsYXkiLCJ0ZXh0Q29udGVudCIsInNsaWRlcldyYXBwZXIiLCJzbGlkZXMiLCJwcmV2QnRuIiwibmV4dEJ0biIsImRvdHNDb250YWluZXIiLCJjdXJyZW50SW5kZXgiLCJpbnRlcnZhbCIsInVwZGF0ZVNsaWRlciIsInNsaWRlIiwiaW5kZXgiLCJkb3QiLCJ0b2dnbGUiLCJuZXh0U2xpZGUiLCJsZW5ndGgiLCJwcmV2U2xpZGUiLCJzdGFydEF1dG9TbGlkZSIsInNldEludGVydmFsIiwic3RvcEF1dG9TbGlkZSIsImNsZWFySW50ZXJ2YWwiLCJfIiwiY3JlYXRlRWxlbWVudCIsImFwcGVuZENoaWxkIiwiZm9ybXMiLCJwaG9uZUlucHV0IiwiZGF0ZUlucHV0IiwicmVnaW9uSW5wdXQiLCJjaGVja2JveElucHV0IiwicmFkaW9JbnB1dHMiLCJzdWJtaXRCdXR0b24iLCJhbGxJbnB1dHMiLCJ0ZWxlZ3JhbUlucHV0IiwiZm9ybVdhcm5pbmciLCJ2YWx1ZSIsInRyaW0iLCJyZXBsYWNlIiwic2xpY2UiLCJldmVudCIsInRhcmdldElucHV0IiwidGFyZ2V0IiwiY29udGFpbnMiLCJ2YWxpZGF0ZVNpbmdsZUlucHV0IiwiaXNBbnlJbnB1dEZpbGxlZCIsIkFycmF5IiwiZnJvbSIsInNvbWUiLCJpbnB1dCIsImNoZWNrZWQiLCJyZW1vdmUiLCJ0eXBlIiwidGVzdCIsImlzUmFkaW9DaGVja2VkIiwicmFkaW8iLCJ2YWxpZGF0ZUlucHV0cyIsImlzVmFsaWQiLCJoYXNXYXJuaW5nIiwicHJldmVudERlZmF1bHQiLCJzdWNjZXNzTWVzc2FnZSIsInNldFRpbWVvdXQiLCJyZXNldCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBQSxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLFlBQVk7RUFDdEQsSUFBTUMsUUFBUSxHQUFHRixRQUFRLENBQUNHLGdCQUFnQixDQUFDLHVEQUF1RCxDQUFDO0VBRW5HLFNBQVNDLGVBQWVBLENBQUEsRUFBRztJQUN2QkYsUUFBUSxDQUFDRyxPQUFPLENBQUMsVUFBQUMsRUFBRSxFQUFJO01BQ25CLElBQU1DLElBQUksR0FBR0QsRUFBRSxDQUFDRSxxQkFBcUIsQ0FBQyxDQUFDO01BQ3ZDLElBQUlELElBQUksQ0FBQ0UsR0FBRyxHQUFHQyxNQUFNLENBQUNDLFdBQVcsR0FBRyxHQUFHLEVBQUU7UUFDckNMLEVBQUUsQ0FBQ00sU0FBUyxDQUFDQyxHQUFHLENBQUMsU0FBUyxDQUFDO01BQy9CO0lBQ0osQ0FBQyxDQUFDO0VBQ047RUFFQUgsTUFBTSxDQUFDVCxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUVHLGVBQWUsQ0FBQztFQUNsREEsZUFBZSxDQUFDLENBQUM7QUFDckIsQ0FBQyxDQUFDOztBQUVGO0FBQ0FKLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsWUFBWTtFQUN0RCxJQUFNYSxHQUFHLEdBQUdkLFFBQVEsQ0FBQ2UsYUFBYSxDQUFDLHNCQUFzQixDQUFDO0VBQzFELElBQU1DLElBQUksR0FBR2hCLFFBQVEsQ0FBQ2UsYUFBYSxDQUFDLFlBQVksQ0FBQztFQUVqREQsR0FBRyxDQUFDYixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsWUFBWTtJQUN0QyxJQUFJZSxJQUFJLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxLQUFLLE1BQU0sSUFBSUYsSUFBSSxDQUFDQyxLQUFLLENBQUNDLE9BQU8sS0FBSyxFQUFFLEVBQUU7TUFDNURGLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxPQUFPLEdBQUcsT0FBTztNQUM1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Q2hFLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLFNBQVMsQ0FBQztVQUV2Q2dFLFVBQVUsQ0FBQyxZQUFNO1lBQ2JELGNBQWMsQ0FBQ2hFLFNBQVMsQ0FBQ3VELE1BQU0sQ0FBQyxTQUFTLENBQUM7WUFDMUNuRCxJQUFJLENBQUM4RCxLQUFLLENBQUMsQ0FBQztVQUNoQixDQUFDLEVBQUUsSUFBSSxDQUFDO1VBRVJGLGNBQWMsQ0FBQzNFLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFNO1lBQzNDMkUsY0FBYyxDQUFDaEUsU0FBUyxDQUFDdUQsTUFBTSxDQUFDLFNBQVMsQ0FBQztZQUMxQ25ELElBQUksQ0FBQzhELEtBQUssQ0FBQyxDQUFDO1VBQ2hCLENBQUMsQ0FBQztRQUNOO01BQ0o7SUFDSixDQUFDLENBQUM7RUFDTixDQUFDLENBQUM7QUFDTixDQUFDLENBQUMiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vZmFkZS1pbiB3aGVuIHZpc2libGVcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZmFkZS1pbiwgLnNsaWRlSW5MZWZ0LCAuc2xpZGVJblJpZ2h0LCAuZmFkZUluRnJvbVRvcFwiKTtcblxuICAgIGZ1bmN0aW9uIGNoZWNrVmlzaWJpbGl0eSgpIHtcbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChlbCA9PiB7XG4gICAgICAgICAgICBjb25zdCByZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICBpZiAocmVjdC50b3AgPCB3aW5kb3cuaW5uZXJIZWlnaHQgKiAwLjkpIHtcbiAgICAgICAgICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKFwidmlzaWJsZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgY2hlY2tWaXNpYmlsaXR5KTtcbiAgICBjaGVja1Zpc2liaWxpdHkoKTtcbn0pO1xuXG4vL29wZW4gZm9ybSBibG9ja1xuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGVhZGVyX19jb250ZW50LWJ0blwiKTtcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5maXJzdEZvcm1cIik7XG5cbiAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGZvcm0uc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIgfHwgZm9ybS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiKSB7XG4gICAgICAgICAgICBmb3JtLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSBcItCX0LPQvtGA0L3Rg9GC0LhcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvcm0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gXCLQlNC+0ZTQtNC90LDRgtC40YHRjFwiO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcblxuLy9zbGlkZXJcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHNsaWRlcldyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNsaWRlcl9fd3JhcHBlclwiKTtcbiAgICBjb25zdCBzbGlkZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnNsaWRlcl9fc2xpZGVcIik7XG4gICAgY29uc3QgcHJldkJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2xpZGVyX19idG4tcHJldlwiKTtcbiAgICBjb25zdCBuZXh0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zbGlkZXJfX2J0bi1uZXh0XCIpO1xuICAgIGNvbnN0IGRvdHNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNsaWRlcl9fZG90c1wiKTtcbiAgICBsZXQgY3VycmVudEluZGV4ID0gMDtcbiAgICBsZXQgaW50ZXJ2YWw7XG5cbiAgICBmdW5jdGlvbiB1cGRhdGVTbGlkZXIoKSB7XG4gICAgICAgIHNsaWRlcy5mb3JFYWNoKChzbGlkZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHNsaWRlLnN0eWxlLmRpc3BsYXkgPSBpbmRleCA9PT0gY3VycmVudEluZGV4ID8gXCJmbGV4XCIgOiBcIm5vbmVcIjtcbiAgICAgICAgfSk7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc2xpZGVyX19kb3RcIikuZm9yRWFjaCgoZG90LCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgZG90LmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmVcIiwgaW5kZXggPT09IGN1cnJlbnRJbmRleCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG5leHRTbGlkZSgpIHtcbiAgICAgICAgY3VycmVudEluZGV4ID0gKGN1cnJlbnRJbmRleCArIDEpICUgc2xpZGVzLmxlbmd0aDtcbiAgICAgICAgdXBkYXRlU2xpZGVyKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcHJldlNsaWRlKCkge1xuICAgICAgICBjdXJyZW50SW5kZXggPSAoY3VycmVudEluZGV4IC0gMSArIHNsaWRlcy5sZW5ndGgpICUgc2xpZGVzLmxlbmd0aDtcbiAgICAgICAgdXBkYXRlU2xpZGVyKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc3RhcnRBdXRvU2xpZGUoKSB7XG4gICAgICAgIGludGVydmFsID0gc2V0SW50ZXJ2YWwobmV4dFNsaWRlLCAzMDAwKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzdG9wQXV0b1NsaWRlKCkge1xuICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcbiAgICB9XG5cbiAgICBzbGlkZXMuZm9yRWFjaCgoXywgaW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgZG90ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgICAgIGRvdC5jbGFzc0xpc3QuYWRkKFwic2xpZGVyX19kb3RcIik7XG4gICAgICAgIGRvdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgY3VycmVudEluZGV4ID0gaW5kZXg7XG4gICAgICAgICAgICB1cGRhdGVTbGlkZXIoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGRvdHNDb250YWluZXIuYXBwZW5kQ2hpbGQoZG90KTtcbiAgICB9KTtcblxuICAgIHByZXZCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHByZXZTbGlkZSk7XG4gICAgbmV4dEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgbmV4dFNsaWRlKTtcblxuICAgIHVwZGF0ZVNsaWRlcigpO1xuICAgIHN0YXJ0QXV0b1NsaWRlKCk7XG59KTtcblxuLy9mb3JtXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgICBjb25zdCBmb3JtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2Zvcm0nKTsgIC8vINCS0YHQtSDRhNC+0YDQvNGLINC90LAg0YHRgtGA0LDQvdC40YbQtVxuXG4gICAgZm9ybXMuZm9yRWFjaChmb3JtID0+IHtcbiAgICAgICAgY29uc3QgcGhvbmVJbnB1dCA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmZvcm1fX2lucHV0LXBob25lJyk7XG4gICAgICAgIGNvbnN0IGRhdGVJbnB1dCA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmZvcm1fX2lucHV0LWRhdGUnKTtcbiAgICAgICAgY29uc3QgcmVnaW9uSW5wdXQgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19pbnB1dC1yZWdpb24nKTtcbiAgICAgICAgY29uc3QgY2hlY2tib3hJbnB1dCA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmZvcm1fX2lucHV0LWNoZWNrYm94Jyk7XG4gICAgICAgIGNvbnN0IHJhZGlvSW5wdXRzID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFtuYW1lPVwieWVzLW5vXCJdJyk7IC8vINCU0LvRjyDQv9GA0L7QstC10YDQutC4INCy0L7QtdC90L3QvtGB0LvRg9C20LDRidC10LPQvlxuICAgICAgICBjb25zdCBzdWJtaXRCdXR0b24gPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19zdWJtaXQnKTtcbiAgICAgICAgY29uc3QgYWxsSW5wdXRzID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcuZm9ybV9faW5wdXQnKTtcbiAgICAgICAgY29uc3QgdGVsZWdyYW1JbnB1dCA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmZvcm1fX2lucHV0LXRlbGVncmFtJyk7IC8vINCd0ZbQuiDQsiDRgtC10LvQtdCz0YDQsNC80ZZcbiAgICAgICAgY29uc3QgZm9ybVdhcm5pbmcgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX193YXJuaW5nJyk7ICAvLyDQmtC+0L3RgtC10LnQvdC10YAg0LTQu9GPINC/0YDQtdC00YPQv9GA0LXQttC00LXQvdC40LlcblxuICAgICAgICAvLyB0ZWxlcGhvbmVcbiAgICAgICAgcGhvbmVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChwaG9uZUlucHV0LnZhbHVlLnRyaW0oKSA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICBwaG9uZUlucHV0LnZhbHVlID0gJyszOCc7IC8vINCQ0LLRgtC+0LfQsNC/0L7Qu9C90LXQvdC40LUg0L/RgNC4INGE0L7QutGD0YHQtVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBwaG9uZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IHZhbHVlID0gdGhpcy52YWx1ZS5yZXBsYWNlKC9cXEQvZywgJycpO1xuXG4gICAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gJyszOCAnICsgdmFsdWUuc2xpY2UoMiwgNSkgKyAnICcgKyB2YWx1ZS5zbGljZSg1LCA4KSArICcgJyArIHZhbHVlLnNsaWNlKDgsIDEwKSArICcgJyArIHZhbHVlLnNsaWNlKDEwLCAxMik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gJyszOCc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy9pbnB1dFxuICAgICAgICBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXRJbnB1dCA9IGV2ZW50LnRhcmdldDtcblxuICAgICAgICAgICAgaWYgKHRhcmdldElucHV0LmNsYXNzTGlzdC5jb250YWlucygnd2FybmluZycpKSB7XG4gICAgICAgICAgICAgICAgdmFsaWRhdGVTaW5nbGVJbnB1dCh0YXJnZXRJbnB1dCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGlzQW55SW5wdXRGaWxsZWQgPSBBcnJheS5mcm9tKGFsbElucHV0cykuc29tZShpbnB1dCA9PiBpbnB1dC52YWx1ZS50cmltKCkgIT09IFwiXCIgfHwgaW5wdXQuY2hlY2tlZCk7XG4gICAgICAgICAgICBpZiAoaXNBbnlJbnB1dEZpbGxlZCkge1xuICAgICAgICAgICAgICAgIHN1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBjaGVjayAxIGlucHV0XG4gICAgICAgIGZ1bmN0aW9uIHZhbGlkYXRlU2luZ2xlSW5wdXQoaW5wdXQpIHtcbiAgICAgICAgICAgIGlmIChpbnB1dC50eXBlID09PSBcImRhdGVcIiAmJiBpbnB1dC52YWx1ZSA9PT0gXCIyMDAwLTAxLTAxXCIpIHtcbiAgICAgICAgICAgICAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKCd3YXJuaW5nJyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlucHV0LnZhbHVlLnRyaW0oKSA9PT0gXCJcIiB8fCAoaW5wdXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmb3JtX19pbnB1dC1waG9uZScpICYmICEvXlxcKzM4XFxzKlxcZHszfVxccypcXGR7M31cXHMqXFxkezJ9XFxzKlxcZHsyfSQvLnRlc3QoaW5wdXQudmFsdWUpKSkge1xuICAgICAgICAgICAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoJ3dhcm5pbmcnKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaW5wdXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmb3JtX19pbnB1dC1yZWdpb24nKSAmJiBpbnB1dC52YWx1ZSA9PT0gXCJcIikge1xuICAgICAgICAgICAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoJ3dhcm5pbmcnKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaW5wdXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmb3JtX19pbnB1dC1jaGVja2JveCcpICYmICFpbnB1dC5jaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZCgnd2FybmluZycpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChpbnB1dC5jbGFzc0xpc3QuY29udGFpbnMoJ2Zvcm1fX2lucHV0LXJhZGlvJykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpc1JhZGlvQ2hlY2tlZCA9IEFycmF5LmZyb20ocmFkaW9JbnB1dHMpLnNvbWUocmFkaW8gPT4gcmFkaW8uY2hlY2tlZCk7XG4gICAgICAgICAgICAgICAgaWYgKCFpc1JhZGlvQ2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICByYWRpb0lucHV0cy5mb3JFYWNoKHJhZGlvID0+IHJhZGlvLmNsYXNzTGlzdC5hZGQoJ3dhcm5pbmcnKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmFkaW9JbnB1dHMuZm9yRWFjaChyYWRpbyA9PiByYWRpby5jbGFzc0xpc3QucmVtb3ZlKCd3YXJuaW5nJykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSgnd2FybmluZycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdmFsaWRhdGlvblxuICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZUlucHV0cyhmb3JtKSB7XG4gICAgICAgICAgICBsZXQgaXNWYWxpZCA9IHRydWU7XG4gICAgICAgICAgICBsZXQgaGFzV2FybmluZyA9IGZhbHNlO1xuXG4gICAgICAgICAgICBhbGxJbnB1dHMuZm9yRWFjaChpbnB1dCA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGlucHV0ID09PSB0ZWxlZ3JhbUlucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoaW5wdXQudHlwZSA9PT0gXCJkYXRlXCIgJiYgaW5wdXQudmFsdWUgPT09IFwiMjAwMC0wMS0wMVwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoJ3dhcm5pbmcnKTtcbiAgICAgICAgICAgICAgICAgICAgaGFzV2FybmluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGlzVmFsaWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGlucHV0LnZhbHVlLnRyaW0oKSA9PT0gXCJcIiB8fCAoaW5wdXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmb3JtX19pbnB1dC1waG9uZScpICYmICEvXlxcKzM4XFxzKlxcZHszfVxccypcXGR7M31cXHMqXFxkezJ9XFxzKlxcZHsyfSQvLnRlc3QoaW5wdXQudmFsdWUpKSkge1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKCd3YXJuaW5nJyk7XG4gICAgICAgICAgICAgICAgICAgIGhhc1dhcm5pbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpbnB1dC5jbGFzc0xpc3QuY29udGFpbnMoJ2Zvcm1fX2lucHV0LXJlZ2lvbicpICYmIGlucHV0LnZhbHVlID09PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoJ3dhcm5pbmcnKTtcbiAgICAgICAgICAgICAgICAgICAgaGFzV2FybmluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGlzVmFsaWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGlucHV0LmNsYXNzTGlzdC5jb250YWlucygnZm9ybV9faW5wdXQtY2hlY2tib3gnKSAmJiAhaW5wdXQuY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKCd3YXJuaW5nJyk7XG4gICAgICAgICAgICAgICAgICAgIGhhc1dhcm5pbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpbnB1dC5jbGFzc0xpc3QuY29udGFpbnMoJ2Zvcm1fX2lucHV0LXJhZGlvJykpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNSYWRpb0NoZWNrZWQgPSBBcnJheS5mcm9tKHJhZGlvSW5wdXRzKS5zb21lKHJhZGlvID0+IHJhZGlvLmNoZWNrZWQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWlzUmFkaW9DaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYWRpb0lucHV0cy5mb3JFYWNoKHJhZGlvID0+IHJhZGlvLmNsYXNzTGlzdC5hZGQoJ3dhcm5pbmcnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNXYXJuaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzVmFsaWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhZGlvSW5wdXRzLmZvckVhY2gocmFkaW8gPT4gcmFkaW8uY2xhc3NMaXN0LnJlbW92ZSgnd2FybmluZycpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ3dhcm5pbmcnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKGhhc1dhcm5pbmcpIHtcbiAgICAgICAgICAgICAgICBmb3JtV2FybmluZy5jbGFzc0xpc3QuYWRkKCd2aXNpYmxlJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZvcm1XYXJuaW5nLmNsYXNzTGlzdC5yZW1vdmUoJ3Zpc2libGUnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGlzVmFsaWQpIHtcbiAgICAgICAgICAgICAgICBzdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnd2FybmluZycpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCgnd2FybmluZycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy9zdWJtaXRcbiAgICAgICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgIGxldCBpc1ZhbGlkID0gdHJ1ZTtcbiAgICAgICAgICAgIHZhbGlkYXRlSW5wdXRzKGZvcm0pO1xuXG4gICAgICAgICAgICBpZiAoZm9ybS5xdWVyeVNlbGVjdG9yKCcud2FybmluZycpKSB7XG4gICAgICAgICAgICAgICAgaXNWYWxpZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoaXNWYWxpZCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3NNZXNzYWdlID0gZm9ybS5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fc3VjY2VzcycpO1xuICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzTWVzc2FnZSkge1xuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzTWVzc2FnZS5jbGFzc0xpc3QuYWRkKCd2aXNpYmxlJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzTWVzc2FnZS5jbGFzc0xpc3QucmVtb3ZlKCd2aXNpYmxlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDUwMDApO1xuXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NNZXNzYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc01lc3NhZ2UuY2xhc3NMaXN0LnJlbW92ZSgndmlzaWJsZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybS5yZXNldCgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5cblxuXG5cblxuIl19
